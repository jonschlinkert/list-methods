#! /usr/bin/env node

// Node.js
var path      = require('path');

// node_modules
var prompt    = require('prompt');
var chalk     = require('chalk');
var file      = require('fs-utils');

var success   = chalk.green;
var warn      = chalk.yellow;
var error     = chalk.red;

// Local libs
var methods   = require('../index');
var templates = require('../lib/template');

// Args
var src, dest, tmpl, name = '';

if(process.argv.length === 2) {
  // If no destination was given
  methods.writeFile('docs.md', file.findFile('*.js'), {template: templates.docs});
  return;
} else {
  src  = process.argv[2];
  dest = process.argv[3];
}

if(process.argv[4]) {
  tmpl = process.argv[4];
  name = tmpl;
}

function success(filepath) {
  console.log(chalk.green('\n>> Saved file ') +
    '"' + filepath + '.json' + '"' + success(' OK'));
};
if (tmpl in templates) {
  tmpl = templates[tmpl];
  console.warn('Using built-in template:', name, success('OK'));
} else if(tmpl) {
  try {
    // If it's a string, try to require it as a npm module.
    tmpl = require(opts.template);
    console.warn('Requiring template:', name, 'from node_modules', success('OK'));
  } catch (e) {
    try {
      // If that doesn't work, try to require it locally.
      tmpl = require(path.resolve(opts.template));
      console.warn('Requiring template:', name, success('OK'));
    } catch(e) {
      // As a last resort, try to use it directly, or
      // fallback on the built-in "docs" template
      tmpl = opts.template || templates.docs;
      console.warn('Using the "docs" template.', success('OK'));
    }
  }
} else {
  tmpl = templates.docs;
  console.warn('Using template:', name, success('OK'));
}

// a destination was given:
if(dest) {
  if(file.ext(dest) === 'json') {
    methods.writeDataFile(dest, src);
  } else if(file.ext(dest) === 'yml') {
    methods.writeFile(dest, src, {template: templates.yaml});
  } else {
    methods.writeFile(dest, src, {template: tmpl});
  }
} else {
  // If no destination was given
  methods.writeFile(file.base(src) + '.md', src, {template: tmpl});
}